// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PodcastApp.Data;

namespace PodcastApp.Data.Migrations
{
    [DbContext(typeof(PodcastContext))]
    partial class PodcastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("PodcastApp.Domain.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitterHandle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("PodcastApp.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("PodcastApp.Domain.Podcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Length")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Podcasts");
                });

            modelBuilder.Entity("PodcastApp.Domain.PodcastHost", b =>
                {
                    b.Property<int>("PodcastId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PodcastId", "HostId");

                    b.HasIndex("HostId");

                    b.ToTable("PodcastHost");
                });

            modelBuilder.Entity("PodcastApp.Domain.PodcastMovie", b =>
                {
                    b.Property<int>("PodcastId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opinion")
                        .HasColumnType("TEXT");

                    b.HasKey("PodcastId", "HostId", "MovieId");

                    b.HasIndex("HostId");

                    b.HasIndex("MovieId");

                    b.ToTable("PodcastMovie");
                });

            modelBuilder.Entity("PodcastApp.Domain.Timestamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PodcastId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Section")
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PodcastId");

                    b.ToTable("Timestamp");
                });

            modelBuilder.Entity("PodcastApp.Domain.PodcastHost", b =>
                {
                    b.HasOne("PodcastApp.Domain.Host", "Host")
                        .WithMany("PodcastHosts")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodcastApp.Domain.Podcast", "Podcast")
                        .WithMany("PodcastHosts")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodcastApp.Domain.PodcastMovie", b =>
                {
                    b.HasOne("PodcastApp.Domain.Host", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodcastApp.Domain.Movie", "Movie")
                        .WithMany("PodcastMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodcastApp.Domain.Podcast", "Podcast")
                        .WithMany()
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodcastApp.Domain.Timestamp", b =>
                {
                    b.HasOne("PodcastApp.Domain.Podcast", "Podcast")
                        .WithMany("Timestamps")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
